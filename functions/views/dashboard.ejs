<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Online Pomodoro Timer - eTomato note, stats and music </title>
    <meta name="description" content="eTomato is an online pomodoro timer
            integrated with notepad and lofi music - providing an efficient vibe
            to boost your study and work. See your study stats and evaluate your
            time spent. Check out fellowâ€™s notes and inspire each other.">
    <link rel="shortcut icon" href="./public/image/tomato.png" type="image/x-icon">
    <!-- Bootstrap , fonts & icons  -->
    <link type="text/css" rel="stylesheet" href="./public/toast/themes/toasteur-default.min.css">
    <link rel="stylesheet" href='./public/css/bootstrap.min.css'>
    <link rel="stylesheet" href="./public/fonts/icon-font/css/style.css">
    <link rel="stylesheet" href="./public/fonts/typography-font/typo.css">
    <link rel="stylesheet" href="./public/fonts/fontawesome-5/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Karla:wght@300;400;500;600;700;800&display=swap"
        rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Gothic+A1:wght@400;500;700;900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@400;500;600;700;800;900&display=swap"
        rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600;700;800;900&display=swap"
        rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800;900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="./public/plugins/aos/aos.min.css">
    <link rel="stylesheet" href="./public/css/main.css">
    <link type="text/css" rel="stylesheet" href="https://www.gstatic.com/firebasejs/ui/6.0.1/firebase-ui-auth.css">
    <link href="./public/summernote/summernote.min.css" rel="stylesheet">

    <!-- Share -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.0/FileSaver.min.js"></script>
    <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>


    <script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.8.0/chart.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js'></script>
    <script src="https://www.gstatic.com/firebasejs/ui/6.0.1/firebase-ui-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-storage.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-analytics.js"></script>

    <script src="./public/js/popper.min.js"></script>
    <script src="./public/js/bootstrap.min.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-analytics.js"></script>

</head>

<body data-theme-mode-panel-active data-theme="light" style="font-family:
        'Mazzard H';" onload="onLoad();">

    <div id="header">
        <div class="row position-relative justify-content-center">
            <div class="float-container" id="heading-text-icon">
                <div class="float-child" id="title-icon">
                    <img src="./public/image/tomato.png" width="60px" alt="">
                </div>
                <div class="float-child" id="title-text">eTomato</div>
            </div>
        </div>
        <div class="dropdown" id="settings">
            <a href="#" id="dropdownMenuButton" data-bs-toggle="dropdown">
                <img id="settingImg" src="<%=profileUrl%>" width="40px" height="40px" alt="Avatar">
            </a>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" href="#feedbackModal" data-bs-toggle="modal">Feedback</a>
                <a class="dropdown-item" href="#statsModal" data-bs-toggle="modal">Stats</a>
                <a class="dropdown-item" href="#logoutModal" data-bs-toggle="modal">Logout</a>
            </div>
        </div>
    </div>

    <!--Division for Modal-->
    <div id="feedbackModal" class="modal fade" role="dialog" data-bs-backdrop="static" data-bs-keyboard="false"
        aria-labelledby="feedbackTitle">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="feedbackTitle">How would you feel if you could no longer use</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center">
                    <h4><strong>eTomato.online</strong>?</h4>
                    <hr id="feedbackHr">
                </div>
                <div class="form-check mb-4">
                    <input name="feedback" type="radio" class="feedback_opt" id="feedback_opt_1" value="1">
                    <label class="ml-3" for="feedback_opt_1">Very disappointed</label>
                </div>
                <div class="form-check mb-4">
                    <input name="feedback" type="radio" class="feedback_opt" id="feedback_opt_2" value="2">
                    <label class="ml-3" for="feedback_opt_2">Somewhat disappointed</label>
                </div>
                <div class="form-check mb-4">
                    <input name="feedback" type="radio" class="feedback_opt" id="feedback_opt_3" value="3">
                    <label class="ml-3" for="feedback_opt_3">Not disappointed</label>
                </div>
                <div class="form-check mb-4">
                    <input name="feedback" type="radio" class="feedback_opt" id="feedback_opt_4" value="4">
                    <label class="ml-3" for="feedback_opt_4">N/A</label>
                </div>
                <div class="text-center">
                    <h5>What could we improve?</h5>
                    <hr id="feedbackHr">
                </div>
                <textarea type="textarea" placeholder="Your Message" rows="3" id="feedbackMsg"></textarea>
                <div class="modal-footer">
                    <a href="" class="btn btn-primary" onclick="SendFeedback();">Send
                        <i class="fa fa-paper-plane"></i>
                    </a>
                    <a href="" class="btn btn-outline-primary" data-bs-dismiss="modal">Cancel</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal stopTomato -->
    <div class="modal fade" id="stopTomatoModal" tabindex="-1" aria-labelledby="stopLableModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="stopLableModalLabel">Stop this tomato?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Do not worry: The next Pomodoro will go better. Be gentle with yourself.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <script type="module" src="./public/js/circle.js"></script>
                    <button onclick="StopTomato()" type="button" class="btn btn-danger px-4" data-ds-dismiss="modal"
                        id="modalClose2">Yes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Logout</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you going to logout?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" onclick="logout()" class="btn btn-primary">Logout</button>
                </div>
            </div>
        </div>
    </div>

    <div id="left-side">
        <div class="row justify-content-center" id="todayDiv">
            <lable id="todayTomatoLbl">Today's tomatos (<%=todayTmt.length%>)</lable>
            <!-- <span onclick="printToFile();" id="shareSpan"><img data-bs-toggle="tooltip" data-bs-placement="bottom"
                    title="Get a pic for today's summary." src="./public/image/share.png" width="20px"
                    height="25px" /></span> -->
            <div id="todayTmtId">
                <div class="row justify-content-start" id="todayTmtRow">
                    <%if (isTomatoOn) {%>
                    <div class="col-3">
                        <img id="todayTmtImgId" src="./public/image/growing.gif" width="40px" height="40px" alt="Avatar"
                            data-bs-toggle="tooltip" data-bs-placement="bottom" title="Working in progress" />
                    </div>
                    <%}%>
                        <%for(let i=0; i<todayTmt.length; i++) {%>
                    <div class="col-3">
                        <%if(todayTmt[i]['duration'] == "25 mins") {%>
                        <img id="todayTmtImgId" src="./public/image/tomato.png" width="40px" height="40px" alt="Avatar"
                            data-bs-toggle="tooltip" data-bs-placement="bottom"
                            title="<%=todayTmt[i]['type']%>: <%=todayTmt[i]['duration']%>" />
                        <%} else {%>
                        <img id="todayTmtImgId" src="./public/image/green_tomato.png" width="40px" height="40px"
                            alt="Avatar" data-bs-toggle="tooltip" data-bs-placement="bottom"
                            title="<%=todayTmt[i]['type']%>: <%=todayTmt[i]['duration']%>" />
                        <%}%>
                            </div>
                        <%}%>
                        <hr class="split" />
                    </div>
                </div>
            </div>


            <div class="row justify-content-center" id="todoDivId">
                <lable id="todoLabel">Today's todo</lable>
                <div id="todoDiv">
                    <div id="inputDivId">
                        <input type="text" id="todoInput" placeholder="New todo">
                        <span onclick="newTodo()" id="addNotebtn" style="cursor:pointer;" class="addBtn"><img
                                src="./public/image/add_btn.png" width="20px" height="20px" /></span>
                        <span class="spinner-border spinner-border-sm addBtn" id="addNotebtn-spinner"
                            style="color:white; visibility: hidden"></span>
                    </div>
                </div>

                <ul id="myUL" style="overflow-x: hidden; overflow-y: auto;height: 30vh">
                    <% for(let i=0; i<todos.length; i++) { %>
                    <% if(todos[i]['status'] == '1') {%>
                    <li id="<%=todos[i]['uid']%>" class="checked"><%=todos[i]['inputvalue']%></li>
                    <% } else { %>
                    <li id="<%=todos[i]['uid']%>" class="todoList"><%=todos[i]['inputvalue']%></li>
                    <% }%>
                    <% } %>
                </ul>
            </div>
        </div>
    </div>
    <div id="right-side">
        <div class="row justify-content-center" id="messageDiv">
            <lable id="todayTomatoLbl">Chat</lable>
        </div>
        <div class="chat-container">
            <div class="message" id="message-id">
                <ul class="messageul" id="messageul-id" style="list-style: none; height: 100%; overflow: auto;">

                </ul>
            </div>
            <div id="send-btn-div" class="row justify-content-center">
                <div class="col-10" style="height: 30px;">
                    <input type="text" class="text-input" id="send-input" placeholder="Type your message here...">
                </div>
                <div class="col-2" style="height: 30px;">
                    <button class="send-button" id="send-btn" onclick="sendMsg()">Send</button>
                </div>
            </div>
        </div>
    </div>

    <div id="middle">
        <div class="row justify-content-center">
            <div class="circlebar" id="circlebarId" data-circle-startTime=<%=durationSec%> data-circle-dialWidth=16
                data-circle-size="200px" data-circle-maxValue="<%=tomatoSessionLength%>" data-circle-skin="purple">
                <div class="loader-bg">
                    <% if(isTomatoOn) { %>
                    <div class="text">Loading...</div>
                    <% } else {  %>
                    <div class="text">25:00</div>
                    <% }%>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div id="startBtnSec">
                <a id="start_btn" style="background-color:
                                        transparent; border-width: 0px;" role="button" aria-expanded="false"
                    aria-controls="collapseTimer">
                    <% if(!isTomatoOn) { %>
                    <img id="startBtn" alt="start_a_tomato" src="./public/image/start_tomato.png" width="340"
                        height="45" onmouseover="startOver();" onmouseout="startOut();" onclick="ClickStartBtn();"
                        ondblclick="ClickStartBtn();">
                    <% } else { %>
                    <img id="startBtn" alt="stop_a_tomato" src="./public/image/stop_tomato.png" width="340" height="45"
                        onmouseover="startOver();" onmouseout="startOut();" onclick="ClickStartBtn();"
                        ondblclick="ClickStartBtn();">
                    <% } %>
                </a>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="collapse" id="composingSec">
                <input id="tomatoType" list="hosting-plan" placeholder="Leave a task category for better stats..."
                    type="text" value="<%=pendingNoteType%>">
                <datalist id="hosting-plan">
                    <option value="Reading" />
                    <option value="Working" />
                    <option value="Workout" />
                </datalist>

                <div id="summernote" class="position-relative justify-content-center"><%-pendingNote%></div>
                <script>
                    $(document).ready(function () {
                        $('#summernote').summernote({
                            placeholder: 'During this tomato session, you can write here: 1.the tasks you want to complete. 2.your thoughts and things to remember. 3.your self reflection. ',
                            tabsize: 2,
                            toolbar: [
                                ['style', ['bold', 'italic', 'underline', 'clear']],
                            ],
                            height: 220,
                            focus: true,
                        }).on("summernote.enter", function (we, e) {
                            $(this).summernote('pasteHTML', '<br>&VeryThinSpace;');
                            e.preventDefault();
                        });
                    });
                </script>

                <div id="publishSection" style="display:table;">
                    <button id="saveBtn" type="button" onclick="saveNotes();">Save</button>
                </div>
            </div>
        </div>

        <div class="row justify-content-center" id="musicDiv">
            <div class="collapse" id="musicCollapse">
                <div class="ap" id="ap" data-onrest="0" data-cddismissable="false"
                    data-tomatosessionlength="<%=tomatoSessionLength%>" data-defaultcdlength="<%=coolDownLength%>"
                    data-todaycnt=<%=todayTmt.length%> data-pendingnote="">
                    <div class="ap__inner">
                        <div class="ap__item ap__item--playback">
                            <button class="ap__controls ap__controls--prev">
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg"
                                    xmlns:xlink="http://www.w3.org/1999/xlink" fill="#333" width="24" height="24"
                                    viewBox="0 0 24 24">
                                    <path d="M9.516 12l8.484-6v12zM6 6h2.016v12h-2.016v-12z"></path>
                                </svg>
                            </button>
                            <button class="ap__controls ap__controls--toggle" id="play-pause-button-2">
                                <svg class=" icon-play" version="1.1" xmlns="http://www.w3.org/2000/svg"
                                    xmlns:xlink="http://www.w3.org/1999/xlink" fill="#333" width="36" height="36"
                                    viewBox="0 0 36 36"
                                    data-play="M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z"
                                    data-pause="M 12,26 16.33,26 16.33,10 12,10 z M 20.66,26 25,26 25,10 20.66,10 z">
                                    <path d="M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z">
                                    </path>
                                </svg>
                            </button>
                            <button class="ap__controls ap__controls--next">
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg"
                                    xmlns:xlink="http://www.w3.org/1999/xlink" fill="#333" width="24" height="24"
                                    viewBox="0 0 24 24">
                                    <path d="M15.984 6h2.016v12h-2.016v-12zM6 18v-12l8.484 6z"></path>
                                </svg>
                            </button>
                        </div>
                        <div class="ap__item ap__item--track">
                            <div class="track">
                                <div class="track__title">Queue is empty</div>
                                <div class="track__time">
                                    <span class="track__time--current">--</span>
                                    <span> / </span>
                                    <span class="track__time--duration">--</span>
                                </div>

                                <div class="progress-container">
                                    <div class="progress">
                                        <div class="progress__bar"></div>
                                        <div class="progress__preload"></div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="ap__item ap__item--settings">
                            <div class="ap__controls volume-container">
                                <button class="volume-btn">
                                    <svg class="icon-volume-on" version="1.1" xmlns="http://www.w3.org/2000/svg"
                                        xmlns:xlink="http://www.w3.org/1999/xlink" fill="#333" width="24" height="24"
                                        viewBox="0 0 24 24">
                                        <path
                                            d="M14.016 3.234q3.047 0.656 5.016 3.117t1.969 5.648-1.969 5.648-5.016 3.117v-2.063q2.203-0.656 3.586-2.484t1.383-4.219-1.383-4.219-3.586-2.484v-2.063zM16.5 12q0 2.813-2.484 4.031v-8.063q2.484 1.219 2.484 4.031zM3 9h3.984l5.016-5.016v16.031l-5.016-5.016h-3.984v-6z">
                                        </path>
                                    </svg>
                                    <svg class="icon-volume-off" version="1.1" xmlns="http://www.w3.org/2000/svg"
                                        xmlns:xlink="http://www.w3.org/1999/xlink" fill="#333" width="24" height="24"
                                        viewBox="0 0 24 24">
                                        <path
                                            d="M12 3.984v4.219l-2.109-2.109zM4.266 3l16.734 16.734-1.266 1.266-2.063-2.063q-1.734 1.359-3.656 1.828v-2.063q1.172-0.328 2.25-1.172l-4.266-4.266v6.75l-5.016-5.016h-3.984v-6h4.734l-4.734-4.734zM18.984 12q0-2.391-1.383-4.219t-3.586-2.484v-2.063q3.047 0.656 5.016 3.117t1.969 5.648q0 2.25-1.031 4.172l-1.5-1.547q0.516-1.266 0.516-2.625zM16.5 12q0 0.422-0.047 0.609l-2.438-2.438v-2.203q2.484 1.219 2.484 4.031z">
                                        </path>
                                    </svg>
                                </button>
                                <div class="volume">
                                    <div class="volume__track">
                                        <div class="volume__bar"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="coolDownModal" class="modal hide" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="coolDownModalTitle">5 mins Break</h5>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="circlebarCD" id="circlebarCDiD" data-circle-startTime=<%=remainingRestTimeSec%>
                            data-circle-dialWidth=10 data-circle-size="200px" data-circle-maxValue="<%=coolDownLength%>"
                            data-circle-skin="blue">
                            <div class="loader-bg-cd">
                                <div class="cd-text">05:00</div>
                            </div>
                        </div>
                    </div>
                    <hr class="row" style="width: 100%;">
                    <p class="pos_center row">Pomodoro technique suggests 3-5 minutes break to disconnect
                        from your work.</p>
                </div>
            </div>
        </div>
    </div>

    <div id="coolDownForStopModal" class="modal hide" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="coolDownForStopModalTitle">5 mins Break(stopped tomato)</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <div class="circlebarCD2" id="circlebarCDiD2" data-circle-startTime=<%=remainingRestTimeSec%>
                            data-circle-dialWidth=10 data-circle-size="200px" data-circle-maxValue="<%=coolDownLength%>"
                            data-circle-skin="blue">
                            <div class="loader-bg">
                                <div class="text">05:00</div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <p class="pos_center">Pomodoro technique suggests 3-5 minutes break to disconnect
                        from your work.</p>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer-area-l-12 position-relative" style="text-align:left;">
        <div class="modal fade" role="dialog" id="statsModal" data-bs-backdrop="static" data-bs-keyboard="false"
            data-tmtid="0">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="edit-title">My stats (not including today)</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <% for(let i=0; i<statsDays.length; i++) { %>
                        <div class="row">
                            <hr>
                            <canvas id="myChart_<%=i%>" width="400" height="400"></canvas>
                            <hr>
                        </div>
                        <script>
                            var text = '<%-statsDays[i][0]%>' + ' (in mins)';
                            var chartId = 'myChart_<%=i%>'
                            var labels = [];
                            var data = [];
                            var rgb = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6',
                                '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',
                                '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A',
                                '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',
                                '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC',
                                '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',
                                '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',
                                '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',
                                '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3',
                                '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'
                            ];
                            for (const [key, value] of Object.entries(JSON.parse(
                                    '<%-JSON.stringify(statsDays[i][1])%>'))) {
                                labels.push(key);
                                data.push(value / 60);
                                rgb.push(Math.floor(Math.random() * 255));
                            }
                            rgb = rgb.slice(1, 1 + labels.length)
                            new Chart(document.getElementById(chartId).getContext('2d'), {
                                type: 'pie',
                                data: {
                                    labels: labels,
                                    datasets: [{
                                        backgroundColor: rgb,
                                        data: data
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    plugins: {
                                        legend: {
                                            position: 'top',
                                        },
                                        title: {
                                            display: true,
                                            text: text,
                                        }
                                    }
                                }
                            });
                        </script>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" role="dialog" id="editNote" data-bs-backdrop="static" data-bs-keyboard="false"
            data-tmtid="0">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="edit-title">Editing</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input id="EditTomatoType" list="hosting-plan"
                            placeholder="Leave a task category for better stats..." type="text" value="">
                        <datalist id="hosting-plan">
                            <option value="Reading" />
                            <option value="Working" />
                            <option value="Workout" />
                        </datalist>

                        <div id="EditSummernote" class="position-relative justify-content-center"></div>
                        <script>
                            $(document).ready(function () {
                                $('#EditSummernote').summernote({
                                    placeholder: 'During this tomato session, you can write here: 1.the tasks you want to complete. 2.your thoughts and things to remember. 3.your self reflection. ',
                                    tabsize: 2,
                                    toolbar: [
                                        ['style', ['bold', 'italic', 'underline', 'clear']],
                                    ],
                                    height: 800,
                                    focus: true,
                                }).on("EditSummernote.enter", function (we, e) {
                                    $(this).summernote('pasteHTML', '<br>&VeryThinSpace;');
                                    e.preventDefault();
                                });
                            });
                        </script>
                    </div>
                    <div class="modal-footer">
                        <div id="EditpublishSection" style="display:table;">
                            <button id="deleteNoteBtn" type="button" onclick="deleteNotes();">Delete</button>
                            <button id="publishNoteBtn" type="button" onclick="publishNotes();">Publish</button>
                            <button id="saveNoteBtn" type="button" onclick="saveEditNotes();">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    </div>
    <!-- Vendor Scripts -->
    <script src="./public/js/vendor.min.js"></script>
    <script src="./public/plugins/aos/aos.min.js"></script>
    <!-- Activation Script -->
    <script src="./public/js/custom.js"></script>
    <script>
        const firebaseConfig = {
            apiKey: "AIzaSyBe7BVBWqB6znKy7b_UND2nUd09nnUFmEQ",
            authDomain: "etomato-63aac.firebaseapp.com",
            databaseURL: "https://etomato-63aac-default-rtdb.firebaseio.com",
            projectId: "etomato-63aac",
            storageBucket: "etomato-63aac.appspot.com",
            messagingSenderId: "144378496941",
            appId: "1:144378496941:web:dc08de13472e73f14d0324",
            measurementId: "G-7W4Q6GF7JP"
        };
        try {
            firebase.initializeApp(firebaseConfig);
        } catch {}
    </script>

    <script>
        function sendMsg() {
            var inputValue = document.getElementById("send-input").value;
            if (inputValue === '') {
                alert("You must write something!");
                return
            }
            $.ajax({
                url: "./sendMsg",
                type: "POST",
                data: {
                    // checkedValue: checkedValue,
                    msg: inputValue,
                },
                success: function (result) {
                    document.getElementById("send-input").value = "";
                },
                error: function (error) {
                    new Toasteur().error(error.responseText, 'Error!', () => {});
                },
            });
        }

        // Share
        function printToFile() {
            var body = document.createElement("body");
            body.style.background = "black";
            var header = document.createElement("header"),
                h4 = document.createElement("h4");

            h4.textContent = "something";
            header.appendChild(h4);
            body.appendChild(header);
            var todayDiv = structuredClone(document.querySelector("#todayDiv"))
            body.appendChild(todayDiv)
            alert(todayDiv)
            html2canvas(body).then(canvas => {
                canvas.toBlob(function (blob) {
                    window.saveAs(blob, 'e-tomato.jpg');
                });
            });
        }

        function onLoad() {
            firebase.analytics().logEvent('onLoad');
            var isOnRest = document.getElementById('ap').dataset.onrest;
            var cdDismissable = document.getElementById('ap').dataset.cddismissable;
            if (isOnRest > 0) {
                if (cdDismissable == "true") {
                    // $('#coolDownForStopModal').modal("show");
                    // StartCoolDown2();
                } else {
                    $('#coolDownModal').modal("show");
                    StartCoolDown();
                }
            } else {
                var isMusicPlaying = (document.getElementById('ap').dataset.onload === "true");
                if (isMusicPlaying) {
                    // var answer = window.confirm("Your music was on in this session, continue?");
                    // if (answer) {
                    //     document.getElementById('play-pause-button').click();
                    // }
                }
            }
            var btnVal = document.getElementById("startBtn").alt;

            var pendingNoteType = document.getElementById('ap').dataset.pendingnotetype;
            var pendingNote = document.getElementById('ap').dataset.pendingnote;
            if (pendingNoteType || (pendingNote && pendingNote !== "<p><br></p>")) {
                $('#composingSec').collapse("show")
                document.getElementById('addnotebtn').src = "./public/image/add_note.png";
            }
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
            const date = new Date();
            const offset = date.getTimezoneOffset();
            $.ajax({
                url: "./sendTimeOffset",
                type: "POST",
                data: {
                    timeOffset: offset
                }
            });
            $('#notesSec').collapse("hide")
            $('#pubNotesSec').collapse("show")

            var input = document.getElementById("todoInput");
            input.addEventListener("keypress", function (event) {
                if (event.key === "Enter") {
                    event.preventDefault();
                    document.getElementById("addNotebtn").click();
                }
            });
            var msgInput = document.getElementById("send-input");
            msgInput.addEventListener("keypress", function (event) {
                if (event.key === "Enter") {
                    event.preventDefault();
                    document.getElementById("send-btn").click();
                }
            });


            // get firebase database reference...
            var db_ref = firebase.database().ref('messages');
            db_ref.on('child_added', function (data) {

                var newMsg =
                    "<li class=\'msgList\'> <div class=\'row justify-content-start\'> <div class=\'col-2\'> <img class=\'avatar\' src=\'" +
                    data.val().avatarUrl +
                    "\' alt=\'User Avatar\'> </div> <div class=\'col-3\'> <label class=\'msg-username\'>" + data
                    .val().userName +
                    "</label> </div> <div class=\'msg-txt col-3\'>" + data.val().content + "</div></div></li>"
                $(newMsg).appendTo($('.message ul'));


                $('#messageul-id').animate({
                    scrollTop: $('#messageul-id li').last().offset().top
                });
            });
        }

        function toggleLeft() {
            $('#notesSec').collapse("hide")
            $('#pubNotesSec').collapse("show")
        }

        function toggleRight() {
            $('#notesSec').collapse("show")
            $('#pubNotesSec').collapse("hide")
        }

        function LikeNote(btnId) {
            var notePath = btnId.split("_likebtn")[0];
            $.ajax({
                url: "./likeNote",
                type: "POST",
                data: {
                    notePath: notePath,
                },
                success: function (result) {
                    document.getElementById(notePath + "_likebtnLabel").innerText = result;
                    document.getElementById(notePath + "_likebtn").src =
                        "./public/image/already_liked.png";
                },
                error: function (error) {
                    new Toasteur().error(error.responseText, 'Error!', () => {});
                },
            });
        }

        function EditNote(btnId) {
            var tmtId = btnId.split("_btn")[0]
            var tmtType = document.getElementById(tmtId + "_notetype").innerText
            var noteText = document.getElementById(tmtId + "_notetext").innerText
            document.getElementById("EditTomatoType").value = tmtType;
            $('#editNote')[0].dataset.tmtid = tmtId;
            $('#EditSummernote').summernote('code', noteText);
            if (document.getElementById(tmtId + "_status").dataset.ispub === "1") {
                document.getElementById('publishNoteBtn').innerHTML = "Unpublish"
            } else {
                document.getElementById('publishNoteBtn').innerHTML = "Publish"
            }
            $("#editNote").modal("show");
        }

        function saveEditNotes() {
            var tmtId = $('#editNote')[0].dataset.tmtid;
            var tmtType = document.getElementById("EditTomatoType").value
            var notes = $('#EditSummernote').summernote('code')
            $.ajax({
                url: "./editNoteSave",
                type: "POST",
                data: {
                    tmtId: tmtId,
                    tmtType: tmtType,
                    noteText: notes,
                },
                success: function (result) {
                    $("#editNote").modal("hide");
                    document.getElementById(tmtId + "_notetype").innerText = tmtType.length ? tmtType :
                        "No type";
                    document.getElementById(tmtId + "_notetext").innerText = notes ? notes :
                        "Nothing was noted in this session.";
                    if (!notes || notes === "<p><br></p>") {
                        document.getElementById(tmtId + "_notetext").className = "nothing"
                    } else {
                        document.getElementById(tmtId + "_notetext").className = "notehis"
                    }
                    new Toasteur().success('', "Note saved",
                        () => {});
                },
                error: function (error) {
                    new Toasteur().error(error.responseText, 'Error!', () => {});
                },
            });
        }

        function deleteNotes() {
            var tmtId = $('#editNote')[0].dataset.tmtid;
            if (document.getElementById(tmtId + "_status").dataset.ispub === "1") {
                alert("This note is public, please unpublish it first.")
                return;
            }
            var answer = window.confirm("Sure to delete this note?");
            if (answer) {
                $.ajax({
                    url: "./deleteNote",
                    type: "POST",
                    data: {
                        tmtId: tmtId,
                    },
                    success: function (result) {
                        $("#editNote").modal("hide");
                        var tmtId = $('#editNote')[0].dataset.tmtid;
                        document.getElementById(tmtId + "_card").remove();
                        new Toasteur().success('', "Note deleted",
                            () => {});
                    },
                    error: function (error) {
                        new Toasteur().error(error.responseText, 'Error!', () => {});
                    },
                });
            } else {}
        }

        function publishNotes() {
            var tmtId = $('#editNote')[0].dataset.tmtid;
            var question = ""
            if (document.getElementById(tmtId + "_status").dataset.ispub === "1") {
                question = "Sure to unpublish this note?"
            } else {
                question = "Sure to publish this note?"
            }
            var answer = window.confirm(question);
            if (answer) {
                var tmtId = $('#editNote')[0].dataset.tmtid;
                $.ajax({
                    url: "./publishNotes",
                    type: "POST",
                    data: {
                        tmtId: tmtId,
                    },
                    success: function (result) {
                        saveEditNotes();
                        if (result['status'] === "1") {
                            document.getElementById(tmtId + "_status").src =
                                "./public/image/public.png";
                            document.getElementById(tmtId + "_status").title =
                                "This is a public notes."
                            document.getElementById(tmtId + "_status").dataset.ispub =
                                "1"
                            $('#pubNotesSec').prepend(result['newPub']);
                            new Toasteur().success('', "Note published",
                                () => {});
                        } else {
                            document.getElementById(tmtId + "_status").src =
                                "./public/image/private.png";
                            document.getElementById(tmtId + "_status").title =
                                "This is a private note, no one can view."
                            document.getElementById(tmtId + "_status").dataset.ispub =
                                "0"
                            document.getElementById(result['tmtId'] + "_pubcard").remove();
                            new Toasteur().success('', "Note unpublished",
                                () => {});
                        }
                    },
                    error: function (error) {
                        new Toasteur().error(error.responseText, 'Error!', () => {});
                    },
                });
            } else {}
        }


        function addAnoteLeave() {
            var isOn = document.getElementById("addnote").dataset.ison;
            if (isOn === "0") {
                document.getElementById('addnotebtn').src = "./public/image/add_note.png";
            } else {
                document.getElementById('addnotebtn').src = "./public/image/hide_note.png";
            }
        }

        function addAnoteOver() {
            var isOn = document.getElementById("addnote").dataset.ison;
            if (isOn === "0") {
                document.getElementById('addnotebtn').src = "./public/image/add_note_hover.png";
            } else {
                document.getElementById('addnotebtn').src = "./public/image/hide_note_hover.png";
            }
        }

        function addAnote() {
            var isOn = document.getElementById("addnote").dataset.ison;
            if (isOn === "0") {
                $('#composingSec').collapse("show")
                document.getElementById('addnotebtn').src = "./public/image/hide_note.png";
                document.getElementById("addnote").dataset.ison = "1";
            } else {
                document.getElementById("addnote").dataset.ison = "0";
                $('#composingSec').collapse("hide")
                document.getElementById('addnotebtn').src = "./public/image/add_note.png";
            }
        }

        function startOver() {
            var snd = new Audio("./public/sounds/start_over.mp3");
            // var snd = new Audio(
            //     "https://drive.google.com/file/d/1EvRx8uqJ17Q9XpJ9rpXetXdZaWqRaP6w/view?usp=sharing");
            snd.play();
            var btnVal = document.getElementById("startBtn").alt;
            if (btnVal == "start_a_tomato") {
                document.getElementById('startBtn').src = "./public/image/start_tomato_hover.png";
                firebase.analytics().logEvent('startOver');
            } else {
                document.getElementById('startBtn').src = "./public/image/stop_tomato_hover.png";
                firebase.analytics().logEvent('stopOver');
            }
        }

        function startOut() {
            var btnVal = document.getElementById("startBtn").alt;
            if (btnVal == "start_a_tomato") {
                document.getElementById("startBtn").src = "./public/image/start_tomato.png";
                firebase.analytics().logEvent('startOut');
            } else {
                document.getElementById("startBtn").src = "./public/image/stop_tomato.png";
                firebase.analytics().logEvent('stopOut');
            }
        }

        function ClickStartBtn() {
            document.getElementById("startBtn").src = "./public/image/start_tomato_pressed.png";
            var snd = new Audio("./public/sounds/start_clicked.mp3");
            // var snd = new Audio(
            //     "https://drive.google.com/file/d/1RwlArKE3ls_8tKl3LuRInMGr2TuXpg_s/view?usp=sharing");
            snd.play();
            var btnVal = document.getElementById("startBtn").alt;
            if (btnVal == "start_a_tomato") {
                firebase.analytics().logEvent('ClickStartBtn');
                const date = new Date();
                const offset = date.getTimezoneOffset();
                $.ajax({
                    url: "./startSession",
                    type: "POST",
                    data: {
                        timeOffset: offset
                    },
                    success: function (result) {
                        new Toasteur().success('Enjoy your time!', "A new Tomato is started",
                            () => {});
                        document.getElementById("startBtn").src =
                            "./public/image/stop_tomato.png";
                        document.getElementById("startBtn").alt = "stop_a_tomato";
                        $('#musicCollapse').collapse("show")
                        var WIPTmt =
                            '<div class="col-3"> <img id="todayTmtImgId" src="./public/image/growing.gif" width="40px" height="40px" alt="Avatar" data-bs-toggle="tooltip" data-bs-placement="bottom" title data-bs-original-title="Working in progress"  aria-label="Working in progress" /> </div>'
                        $('#todayTmtRow').prepend(
                            WIPTmt);

                        document.getElementById('addAnote').style.display = "block";
                        // document.getElementById('play-pause-button-2').click();
                        var tooltipTriggerList = [].slice.call(document.querySelectorAll(
                            '[data-bs-toggle="tooltip"]'))
                        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                            return new bootstrap.Tooltip(tooltipTriggerEl)
                        })
                    },
                    error: function (error) {
                        new Toasteur().error(error.responseText, 'Error!', () => {});
                        document.getElementById("startBtn").alt = "start_a_tomato";
                        $('#musicCollapse').collapse("hide")
                    },
                });
            } else {
                firebase.analytics().logEvent('ClickStopBtn');
                $('#stopTomatoModal').modal("show");
            }
        }

        function logout() {
            firebase.analytics().logEvent('logout');
            fetch("./logout", {
                    method: "GET",
                })
                .then(response => {
                    window.location.href = "./";
                });
            sessionStorage.setItem("_session", "");
        }

        function SendFeedback() {
            var checkedValue = document.querySelector('.feedback_opt:checked').value;
            var comments = document.getElementById("feedbackMsg").value
            if (checkedValue || comments) {
                $.ajax({
                    url: "./feedback",
                    type: "POST",
                    data: {
                        checkedValue: checkedValue,
                        comments: comments,
                    },
                    success: function (result) {
                        new Toasteur().success("Thanks for the feedback!",
                            'We really appreciate your help',
                            () => {});
                        $('#feedbackModal').modal("hide");
                    },
                    error: function (error) {
                        new Toasteur().error(error.responseText, 'Error!', () => {});
                    },
                });
            }
        }

        function saveNotes() {
            // var checkedValue = document.getElementById('publishCheckBox').checked;
            var tomatoType = document.getElementById("tomatoType").value;
            var notes = $('#summernote').summernote('code')
            if (!tomatoType && !notes) {
                return;
            }
            if (!tomatoType || tomatoType.length == 0) {
                tomatoType = "No type";
            }
            $.ajax({
                url: "./saveNotes",
                type: "POST",
                data: {
                    // checkedValue: checkedValue,
                    tomatoType: tomatoType,
                    notes: notes,
                },
                success: function (result) {
                    new Toasteur().success("Note saved", '',
                        () => {});
                },
                error: function (error) {
                    new Toasteur().error(error.responseText, 'Error!', () => {});
                },
            });
        }

        function showSpinner(show, eleId) {
            var eleSpinnerId = eleId + '-spinner';
            if (!show) {
                document.getElementById(eleId).style.visibility = "visible";
                document.getElementById(eleSpinnerId).style.visibility = 'hidden'
            } else {
                document.getElementById(eleId).style.visibility = "hidden";
                document.getElementById(eleSpinnerId).style.visibility = 'visible'
            }
        }

        function newTodo() {
            var inputValue = document.getElementById("todoInput").value;
            if (inputValue === '') {
                alert("You must write something!");
                return
            }
            showSpinner(true, 'addNotebtn')
            $.ajax({
                url: "./addTodo",
                type: "POST",
                data: {
                    inputValue: inputValue,
                },
                success: function (result) {
                    var li = document.createElement("li");
                    li.className = "todoList";
                    var inputValue = document.getElementById("todoInput").value;
                    var t = document.createTextNode(inputValue);
                    li.id = result
                    li.appendChild(t);
                    if (inputValue === '') {
                        alert("You must write something!");
                    } else {
                        document.getElementById("myUL").insertBefore(li, document.getElementById("myUL")
                            .firstChild);
                    }
                    showSpinner(false, 'addNotebtn');
                    document.getElementById("todoInput").value = "";
                    var span = document.createElement("SPAN");
                    var txt = document.createTextNode("\u00D7");
                    span.className = "closeTodo";
                    span.id = result + "closeTodoId";
                    span.appendChild(txt);

                    var spanSpinner = document.createElement("SPAN");
                    spanSpinner.className = "spinner-border pinner-border-sm closeTodoSpinner";
                    spanSpinner.id = result + "closeTodoId-spinner";
                    spanSpinner.style.visibility = "hidden";
                    spanSpinner.style.color = "white"
                    // spanSpinner.style.height = "100%"
                    li.appendChild(span);
                    li.appendChild(spanSpinner)
                    for (i = 0; i < close.length; i++) {
                        close[i].onclick = function () {
                            var div = this.parentElement;
                            var todoId = div.id;
                            showSpinner(true, todoId + "closeTodoId");
                            $.ajax({
                                url: "./deleteTodo",
                                type: "POST",
                                data: {
                                    todoId: todoId,
                                },
                                success: function (result2) {
                                    var div2 = document.getElementById(result2);
                                    div2.style.display = "none";
                                    showSpinner(false, todoId + "closeTodoId");
                                },
                                error: function (error) {
                                    new
                                    Toasteur().error(error.responseText, 'Error!',
                                        () => {});
                                    showSpinner(false, todoId + "closeTodoId");
                                },
                            });
                        }
                    }
                },
                error: function (error) {
                    new Toasteur().error(error.responseText, 'Error!', () => {});
                    showSpinner(false, 'addNotebtn');
                },
            });
        }
    </script>

    <script>
        $(function () {
            $('#modalClose').on('click', function () {
                $('#stopTomatoModal').modal("hide");
            })
            $('#modalClose1').on('click', function () {
                $('#stopTomatoModal').modal("hide");
            })
            $('#modalClose2').on('click', function () {
                $('#stopTomatoModal').modal("hide");
            })
        })
    </script>

    <script>
        // Create a "close" button and append it to each list item
        var myNodelist = document.getElementsByTagName("LI");
        var i;
        for (i = 0; i < myNodelist.length; i++) {
            var span = document.createElement("SPAN");
            var txt = document.createTextNode("\u00D7");
            var tdId = myNodelist[i].id;
            span.className = "closeTodo";
            span.id = tdId + "closeTodoId";
            span.appendChild(txt);
            var spanSpinner = document.createElement("SPAN");
            spanSpinner.className = "spinner-border spinner-border-sm closeTodoSpinner";
            spanSpinner.id = tdId + "closeTodoId-spinner";
            spanSpinner.style.visibility = "hidden";
            spanSpinner.style.color = "white"
            // spanSpinner.style.height = "100%"
            myNodelist[i].appendChild(span);
            myNodelist[i].appendChild(spanSpinner);
        } // Click on a close button to hide the current list item var
        close = document.getElementsByClassName("closeTodo");
        var i;
        for (i = 0; i < close.length; i++) {
            close[i].onclick = function () {
                var div = this.parentElement;
                var todoId = div.id;
                showSpinner(true, todoId + "closeTodoId")
                $.ajax({
                    url: "./deleteTodo",
                    type: "POST",
                    data: {
                        todoId: todoId,
                    },
                    success: function (result2) {
                        var div2 = document.getElementById(result2);
                        div2.style.display = "none";
                        showSpinner(false, todoId + "closeTodoId")
                    },
                    error: function (error) {
                        new Toasteur().error(error.responseText, 'Error!', () => {});
                        showSpinner(false, todoId + "closeTodoId")
                    },
                });
            }
        }
        var list = document.querySelector('ul');
        list.addEventListener('click',
            function (ev) {
                if (ev.target.tagName === 'LI') {
                    $.ajax({
                        url: "./toggleTodo",
                        type: "POST",
                        data: {
                            todoId: ev.target.id,
                        },
                        success: function (result) {
                            if (result === '1') {
                                ev.target.className = 'checked';
                            } else {
                                ev.target.className = "";
                            }
                        },
                        error: function (error) {
                            new
                            Toasteur().error(error.responseText, 'Error!',
                                () => {});
                        },
                    });
                }
            }, false); // Create a new list item when clicking on the "Add" button
    </script>
    <script type="module" src="./public/js/coolDownClock.js"></script>
    <script type="module" src="./public/js/coolDownForStopClock.js"></script>
    <script type="module" src="./public/js/music2.js"></script>
    <script src="./public/summernote/summernote.min.js"></script>
    <script src='https://cdn.firebase.com/js/client/2.2.1/firebase.js'></script>

    <script src="./public/toast/toasteur.min.js"></script>
</body>

</html>